openapi: 3.0.0
info:
  description: Wallet APIv1
  version: "1.0.0-oas3"
  title: Wallet APIv1 Reference
  contact:
    email: brucegrover.lee@gmail.com
tags:
  - name: Public
    description: Public access
  - name: Private
    description: Bearer Authentication required
paths:
  /transactions:
    get:
      tags:
        - Private
      summary: Get the filtered list of transactions
      description: Get the filtered list of transactions
      security:
      - bearerAuth: []
      parameters:
        - name: attribute
          in: query
          description: Use any attribute of the object to filter the query
          required: false
          schema:
            type: string
          example: /transactions?attribute=value
      responses:
        '202':
          description: Acepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized.
        '406':
          description: Not Acceptable. There is an attribute invalid.

    post:
      tags:
        - Private
      summary: Create a new transaction
      description: Create a new transaction
      security:
      - bearerAuth: []
      requestBody:
        description: Credential object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPostRequest'
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized.
        '406':
          description: Not Acceptable. There is an attribute invalid.

  /transactions/{transactionId}:
    get:
      tags:
        - Private
      summary: Get an transaction
      description: Get an transaction
      security:
      - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          description: transaction's id.
          required: true
          schema:
            type: string
          example: aHNvfoF8r4fDkffd9VTdkfnieb
      responses:
        '202':
          description: Acepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized.
        '404':
          description: Not Found.

    put:
      tags:
        - Private
      summary: Update an transaction
      description: Update an transaction
      security:
      - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          description: transaction's id.
          required: true
          schema:
            type: string
          example: aHNvfoF8r4fDkffd9VTdkfnieb
      requestBody:
        description: Credential object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPostRequest'
      responses:
        '202':
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized.
        '404':
          description: Not Found.
        '406':
          description: Not Acceptable. There is an attribute invalid.

    delete:
      tags:
        - Private
      summary: Delete an transaction
      description: Delete an transaction
      security:
      - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          description: transaction's id.
          required: true
          schema:
            type: string
          example: aHNvfoF8r4fDkffd9VTdkfnieb
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized.
        '404':
          description: Not Found.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
      
  schemas:
    Transaction:
      properties:
        object:
          type: string
          example: transaction 
        id:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        userId:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        categoryId:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        accountId:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        description:
          type: string
          example: Home's spendings
        total:
          type: number
          example: 800.00
        currency:
          type: string
          example: usd

    TransactionPostRequest:
      properties:
        categoryId:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        accountId:
          type: string
          example: bJnb8fWsdWAkh2978kdG
        description:
          type: string
          example: Home's spendings
        total:
          type: number
          example: 800.00
        currency:
          type: string
          example: usd

servers:
  - url: 'http://localhost:3000'